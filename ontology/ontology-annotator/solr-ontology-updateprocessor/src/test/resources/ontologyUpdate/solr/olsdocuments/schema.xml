<?xml version="1.0" encoding="UTF-8" ?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with 
	this work for additional information regarding copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the 
	"License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT 
	WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations 
	under the License. -->

<schema name="example" version="1.5">

	<!-- field names should consist of alphanumeric or underscore characters only and not start with a digit. This is not currently strictly enforced, 
		but other field names will not have first class support from all components and back compatibility is not guaranteed. Names with both leading 
		and trailing underscores (e.g. _version_) are reserved. -->

	<!-- If you remove this field, you must _also_ disable the update log in solrconfig.xml or Solr won't start. _version_ and update log are required 
		for SolrCloud -->
	<field name="_version_" type="long" indexed="true" stored="true" />

	<!-- points to the root document of a block of nested documents. Required for nested document support, may be removed otherwise -->
	<field name="_root_" type="string" indexed="true" stored="false" />

	<!-- Only remove the "id" field if you have a very good reason to. While not strictly required, it is highly recommended. A <uniqueKey> is present 
		in almost all Solr installations. See the <uniqueKey> declaration below where <uniqueKey> is set to "id". -->
	<field name="id" type="int" indexed="true" stored="true" required="true" multiValued="false" />
	<field name="name" type="text_general" indexed="true" stored="true" />
		
	<!-- Ontology annotation reference -->
	<field name="annotation_uri" type="string" indexed="true" stored="true" />
	
	<!-- Ontology label field -->
	<field name="ontology_label" type="text_general" indexed="true" stored="true" />

    <!-- Dynamic field(s), named for relation type and holding IRIs -->
    <dynamicField name="*_rel_iris" type="string" indexed="true" stored="true" multiValued="true" />
    <!-- Dynamic field(s) holding relation labels -->
    <dynamicField name="*_rel_labels" type="text_general" indexed="true" stored="true" multiValued="true" />

    <!-- Dynamic string field(s) -->
    <dynamicField name="*_s" type="string" indexed="true" stored="true" multiValued="true" />
    <!-- Dynamic text field(s) -->
    <dynamicField name="*_t" type="text_general" indexed="true" stored="true" multiValued="true" />

	<!-- catchall field, containing all other searchable text fields (implemented via copyField further on in this schema -->
	<field name="text" type="text_general" indexed="true" stored="false" multiValued="true" />

	<!-- Field to use to determine and enforce document uniqueness. Unless this field is marked with required="false", it will be a required field -->
	<uniqueKey>id</uniqueKey>


	<!-- field type definitions. The "name" attribute is just a label to be used by field definitions. The "class" attribute and any other attributes 
		determine the real behavior of the fieldType. Class names starting with "solr" refer to java classes in a standard package such as org.apache.solr.analysis -->

	<!-- The StrField type is not analyzed, but indexed/stored verbatim. It supports doc values but in that case the field needs to be single-valued 
		and either required or have a default value. -->
	<fieldType name="string" class="solr.StrField" sortMissingLast="true" />

	<!-- boolean type: "true" or "false" -->
	<fieldType name="boolean" class="solr.BoolField" sortMissingLast="true" />

	<!-- A general text field that has reasonable, generic cross-language defaults: it tokenizes with StandardTokenizer, removes stop words from 
		case-insensitive "stopwords.txt" (empty by default), and down cases. At query time only, it also applies synonyms. -->
	<fieldType name="text_general" class="solr.TextField" positionIncrementGap="100">
		<analyzer type="index">
			<tokenizer class="solr.StandardTokenizerFactory" />
			<filter class="solr.LowerCaseFilterFactory" />
		</analyzer>
		<analyzer type="query">
			<tokenizer class="solr.StandardTokenizerFactory" />
			<filter class="solr.LowerCaseFilterFactory" />
		</analyzer>
	</fieldType>

	<!-- Default numeric field types. For faster range queries, consider the tint/tfloat/tlong/tdouble types. These fields support doc values, but 
		they require the field to be single-valued and either be required or have a default value. -->
	<fieldType name="int" class="solr.TrieIntField" precisionStep="0" positionIncrementGap="0" />
	<fieldType name="float" class="solr.TrieFloatField" precisionStep="0" positionIncrementGap="0" />
	<fieldType name="long" class="solr.TrieLongField" precisionStep="0" positionIncrementGap="0" />
	<fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" positionIncrementGap="0" />

</schema>